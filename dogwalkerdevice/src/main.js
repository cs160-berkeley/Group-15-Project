import Pins from "pins";let companionURL;let textStyle = new Style({ font: "bold 50px", color: "white" });let MainContainer = Container.template($ => ({    name: "main", top: 0, bottom: 0, left: 0, right: 0,    skin: new Skin({ fill: $.backgroundColor }),    contents: [        Label($, {            name: "label", top: 70, bottom: 70, left: 70, right: 70,            style: textStyle,  string: $.string        }),    ],}));Handler.bind("/discover", Behavior({    onInvoke: function(handler, message){        trace("Device found the companion.\n");        companionURL = JSON.parse(message.requestText).url;        handler.invoke(new Message(companionURL + "respond"), Message.TEXT);        },    onComplete: function(handler, message, text){        trace("Response was: " + text + "\n");    }}));Handler.bind("/respond", Behavior({    onInvoke: function(handler, message){        message.responseText = "Companion, you found me!";        message.status = 200;        }}));class AppBehavior extends Behavior {    onLaunch(application) {        application.shared = true;        application.discover("dog-prototype.companion.app");        Pins.configure({            analog1: {                require: "Analog", // use built-in digital BLL                pins: {                    ground: { pin: 51, type: "Ground" },                    digital: { pin: 52, direction: "output" },                }            },            analog: {                require: "analogBLL",                pins:{                    analog: {pin: 56, direction: "output"},                    power: {pin: 57, voltage: 3.3, type: "Power"},                    ground: {pin: 58, type: "Ground"},                }            }            button:{                require: "Digital",                pins: {                    digital: {pin: 53, direction: "input"},                    power: {pin: 54, voltage: 3.3, type: "Power"},                    ground: {pin: 55, type: "Ground"},                }            },            led: {                require: "ledBLL",                pins: {                    led: {pin: 51, direction: "output"},                    ground: {pin: 52, type: "Ground"},                }            },            analog: {                require: "Analog",                pins:{                    analog: {pin: 56, direction: "input"},                    power: {pin: 57, voltage: 3.3, type: "Power"},                    ground: {pin: 58, type: "Ground"},                }            }           },  success => {            if (success) {                Pins.share("ws", {zeroconf: true, name: "pins-share-led"});                application.add(new MainContainer({ string: "Ready!", backgroundColor: "#7DBF2E" }));                Pins.repeat("/analog/read", 10, function(result){                    trace(result + "\n");                    application.main.label.string = String(Math.round(result*100));                });            } else {                   application.add(new MainContainer({ string: "Error", backgroundColor: "red" }));               };        });    }    onQuit(application){        application.shared = false;        application.forget("dog-prototype.companion.app");    }}application.behavior = new AppBehavior();